#%RAML 1.0
types:
  NewDataType:
    type: object
title: Employee system api
baseUri: api/employee-sys
description: System API for Employees
mediaType:
  - application/json
version: "1.0"
protocols:
  - HTTPS

uses:
  common-lib: /exchange_modules/2d82031c-d535-4f14-a3d0-97f6bb88fa30/common-lib/1.0.6/common-lib.raml
  employee-lib: /exchange_modules/2d82031c-d535-4f14-a3d0-97f6bb88fa30/employee-lib/1.0.10/employee-lib.raml

traits:
  name-searchable:
    queryParameters:
      name:
        description: <<givenDescription>>
        type: string
        required: false
      

/employees:
  type: 
    common-lib.collection:
      resourceName: Employee
      collectionType: employee-lib.Employee
      collectionType!singularize: employee-lib.Employee
      collectionType!created: employee-lib.Employee
  get:
    is: [name-searchable: {
          givenDescription: Search by employee name
        }
      ]
    queryParameters:
      last_name:
        description: Adding this parameter will filter employees with the given value
        type: string
        required:  false
      expand_details:
        description: will expand all titles and dependencies
        type: boolean
        required: false
        default: false
  /export:
    type: 
      common-lib.process-operation:
/departments:
  type:
    common-lib.collection:
      collectionType: employee-lib.GetDepartments
      collectionType!singularize: employee-lib.GetDepartment
      resourceName: department
      collectionType!created: employee-lib.PostDepartment
  get:
    is: [name-searchable: {
          givenDescription: Search by department name
        }
      ]
  post:
    is: [common-lib.conflictable]

/titles:
  get:
    description: returns the titles currently available in the application
    responses:
      200:
        body:
          application/json:
            type: employee-lib.Titles
